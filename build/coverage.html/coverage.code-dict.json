{"/home/travis/build/npmtest/node-npmtest-object-mapper/test.js":"/* istanbul instrument in package npmtest_object_mapper */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-object-mapper/lib.npmtest_object_mapper.js":"/* istanbul instrument in package npmtest_object_mapper */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_object_mapper = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_object_mapper = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-object-mapper/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-object-mapper && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_object_mapper */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_object_mapper\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_object_mapper.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_object_mapper.rollup.js'] =\n            local.assetsDict['/assets.npmtest_object_mapper.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_object_mapper.__dirname +\n                    '/lib.npmtest_object_mapper.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-object-mapper/node_modules/object-mapper/index.js":"'use strict';\n/*\n\n The MIT License (MIT)\n =====================\n\n Copyright (c) 2012 Daniel L. VerWeire\n\n Permission is hereby granted, free of charge, to any person obtaining\n a copy of this software and associated documentation files (the\n \"Software\"), to deal in the Software without restriction, including\n without limitation the rights to use, copy, modify, merge, publish,\n distribute, sublicense, and/or sell copies of the Software, and to\n permit persons to whom the Software is furnished to do so, subject to\n the following conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n */\n\nmodule.exports = require('./src/object-mapper');","/home/travis/build/npmtest/node-npmtest-object-mapper/node_modules/object-mapper/src/object-mapper.js":"'use strict';\nvar getKeyValue = require('./get-key-value')\n  , setKeyValue = require('./set-key-value')\n  , _undefined\n  ;\n\n\n/**\n * Map a object to another using the passed map\n * @param fromObject\n * @param toObject\n * @param propertyMap\n * @returns {*}\n * @constructor\n */\nfunction ObjectMapper(fromObject, toObject, propertyMap) {\n  var propertyKeys;\n\n  if (typeof propertyMap === 'undefined') {\n    propertyMap = toObject;\n    toObject = _undefined;\n  }\n\n  if (typeof toObject === 'undefined') {\n    toObject = {};\n  }\n\n  propertyKeys = Object.keys(propertyMap);\n\n  return _map(fromObject, toObject, propertyMap, propertyKeys);\n}\nmodule.exports = ObjectMapper;\nmodule.exports.merge = ObjectMapper;\nmodule.exports.getKeyValue = getKeyValue;\nmodule.exports.setKeyValue = setKeyValue;\n\n/**\n * Function that handle each key from map\n * @param fromObject\n * @param toObject\n * @param propertyMap\n * @param propertyKeys\n * @returns {*}\n * @private\n * @recursive\n */\nfunction _map(fromObject, toObject, propertyMap, propertyKeys) {\n  var fromKey\n    , toKey\n    ;\n\n  if (propertyKeys.length) {\n    fromKey = propertyKeys.splice(0, 1)[0];\n    if (propertyMap.hasOwnProperty(fromKey)) {\n      toKey = propertyMap[fromKey];\n\n      toObject = _mapKey(fromObject, fromKey, toObject, toKey);\n    } else {\n      toObject = null;\n    }\n    return _map(fromObject, toObject, propertyMap, propertyKeys);\n  } else {\n    return toObject;\n  }\n}\n\n/**\n * Function that calls get and set key values\n * @param fromObject\n * @param fromKey\n * @param toObject\n * @param toKey\n * @private\n * @recursive\n */\nfunction _mapKey(fromObject, fromKey, toObject, toKey) {\n  var fromValue\n    , restToKeys\n    , _default = null\n    , transform\n    ;\n\n  if (Array.isArray(toKey) && toKey.length) {\n    toKey = toKey.slice();\n    restToKeys = toKey.splice(1);\n    toKey = toKey[0];\n  }\n\n  if (toKey instanceof Object && Object.getPrototypeOf(toKey) === Object.prototype) {\n    _default = toKey.default || null;\n    transform = toKey.transform;\n    toKey = toKey.key;\n  }\n\n  if (Array.isArray(toKey)) {\n    transform = toKey[1];\n    _default = toKey[2] || null;\n    toKey = toKey[0];\n  }\n\n  if (typeof _default === 'function') {\n    _default = _default(fromObject, fromKey, toObject, toKey);\n  }\n\n  fromValue = getKeyValue(fromObject, fromKey);\n  if (typeof fromValue === 'undefined' || fromValue === null) {\n    fromValue = _default;\n  }\n\n  if (typeof fromValue !== 'undefined' && typeof transform === 'function') {\n    fromValue = transform(fromValue, fromObject, toObject, fromKey, toKey);\n  }\n\n  if (typeof fromValue === 'undefined' || typeof toKey === 'undefined') {\n    return toObject;\n  }\n\n  toObject = setKeyValue(toObject, toKey, fromValue);\n\n  if (Array.isArray(restToKeys) && restToKeys.length) {\n    toObject = _mapKey(fromObject, fromKey, toObject, restToKeys);\n  }\n\n  return toObject;\n}\n","/home/travis/build/npmtest/node-npmtest-object-mapper/node_modules/object-mapper/src/get-key-value.js":"'use strict';\n\n/**\n * Make the get of a value with the key in the passed object\n * @param fromObject\n * @param fromKey\n * @constructor\n * @returns {*}\n */\nfunction GetKeyValue(fromObject, fromKey) {\n  var regDot = /\\./g\n    , keys\n    , key\n    , result\n    ;\n\n  keys = fromKey.split(regDot);\n  key = keys.splice(0, 1);\n\n  result = _getValue(fromObject, key[0], keys);\n\n  if (Array.isArray(result)) {\n    if (result.length) {\n      result = result.reduce(function (a, b) {\n        if (Array.isArray(a) && Array.isArray(b)) {\n          return a.concat(b);\n        } else if (Array.isArray(a)) {\n          a.push(b);\n          return a;\n        } else {\n          return [a, b];\n        }\n      });\n    }\n    if (!Array.isArray(result)) {\n      result = [result];\n    }\n  }\n\n  return result;\n}\nmodule.exports = GetKeyValue;\n\n/**\n * Get the value of key within passed object, considering if there is a array or object\n * @param fromObject\n * @param key\n * @param keys\n * @returns {*}\n * @private\n * @recursive\n */\nfunction _getValue(fromObject, key, keys) {\n  var regArray = /(\\[\\]|\\[(.*)\\])$/g\n    , match\n    , arrayIndex\n    , isValueArray = false\n    , result\n    ;\n\n  if (!fromObject) {\n    return;\n  }\n\n  match = regArray.exec(key);\n  if (match) {\n    key = key.replace(regArray, '');\n    isValueArray = (key !== '');\n    arrayIndex = match[2];\n  }\n\n  if (keys.length === 0) {\n    if (isValueArray) {\n      if (typeof arrayIndex === 'undefined') {\n        result = fromObject[key];\n      } else {\n        result = fromObject[key][arrayIndex];\n      }\n    } else if (Array.isArray(fromObject)) {\n      if (key === '') {\n        if (typeof arrayIndex === 'undefined') {\n          result = fromObject;\n        } else {\n          result = fromObject[arrayIndex];\n        }\n      } else {\n        result = fromObject.map(function (item) {\n          return item[key];\n        })\n      }\n    } else {\n      result = fromObject[key];\n    }\n  } else {\n    if (isValueArray) {\n      if (Array.isArray(fromObject[key])) {\n        if (typeof arrayIndex === 'undefined') {\n          result = fromObject[key].map(function (item) {\n            return _getValue(item, keys[0], keys.slice(1));\n          });\n        } else {\n          result = _getValue(fromObject[key][arrayIndex], keys[0], keys.slice(1));\n        }\n      } else {\n        if (typeof arrayIndex === 'undefined') {\n          result = _getValue(fromObject[key], keys[0], keys.slice(1));\n        } else {\n          result = _getValue(fromObject[key][arrayIndex], keys[0], keys.slice(1));\n        }\n      }\n    } else if (Array.isArray(fromObject)) {\n      if (key === '') {\n        if (typeof arrayIndex === 'undefined') {\n          result = _getValue(fromObject, keys[0], keys.slice(1));\n        } else {\n          result = _getValue(fromObject[arrayIndex], keys[0], keys.slice(1));\n        }\n      } else {\n        result = fromObject.map(function (item) {\n          result = _getValue(item, keys[0], keys.slice(1));\n        })\n      }\n      if (typeof arrayIndex === 'undefined') {\n        result = fromObject.map(function (item) {\n          return _getValue(item, keys[0], keys.slice(1));\n        });\n      } else {\n\n        result = _getValue(fromObject[arrayIndex], keys[0], keys.slice(1));\n      }\n    } else {\n      result = _getValue(fromObject[key], keys[0], keys.slice(1));\n    }\n  }\n\n  return result;\n}","/home/travis/build/npmtest/node-npmtest-object-mapper/node_modules/object-mapper/src/set-key-value.js":"'use strict';\n/**\n * Make the set of a value withing the key in the passed object\n * @param baseObject\n * @param destinationKey\n * @param fromValue\n * @returns {*|{}}\n */\nfunction SetKeyValue(baseObject, destinationKey, fromValue) {\n  var regDot = /\\./g\n    , keys\n    , key\n    ;\n\n\n  keys = destinationKey.split(regDot);\n  key = keys.splice(0, 1);\n\n  return _setValue(baseObject, key[0], keys, fromValue);\n}\nmodule.exports = SetKeyValue;\n\n/**\n * Set the value within the passed object, considering if is a array or object set\n * @param destinationObject\n * @param key\n * @param keys\n * @param fromValue\n * @returns {*}\n * @private\n * @recursive\n */\nfunction _setValue(destinationObject, key, keys, fromValue) {\n  var regArray = /(\\[\\]|\\[(.*)\\])$/g\n    , regAppendArray = /(\\[\\]|\\[(.*)\\]\\+)$/g\n    , regCanBeNull = /(\\?)$/g\n    , match\n    , appendToArray\n    , canBeNull\n    , arrayIndex = 0\n    , valueIndex\n    , isPropertyArray = false\n    , isValueArray = false\n    , value\n    ;\n\n  canBeNull = regCanBeNull.test(key);\n  if(canBeNull){\n    key = key.replace(regCanBeNull, '');\n  }\n\n  match = regArray.exec(key);\n  appendToArray = regAppendArray.exec(key);\n  if (match) {\n    isPropertyArray = true;\n    key = key.replace(regArray, '');\n    isValueArray = (key !== '');\n  }\n\n  if (appendToArray) {\n    match = appendToArray;\n    isPropertyArray = true;\n    isValueArray = (key !== '');\n    key = key.replace(regAppendArray, '');\n  }\n\n  if (_isEmpty(destinationObject)) {\n    if (isPropertyArray) {\n      arrayIndex = match[2] || 0;\n      if (isValueArray) {\n        destinationObject = {};\n        destinationObject[key] = [];\n      } else {\n        destinationObject = [];\n      }\n    } else {\n      destinationObject = {};\n    }\n  } else {\n    if (isPropertyArray) {\n      arrayIndex = match[2] || 0;\n    }\n  }\n  if (keys.length === 0) {\n    if(!canBeNull && (fromValue === null || fromValue === undefined)){\n      return destinationObject;\n    }\n    if (isValueArray) {\n      if (Array.isArray(destinationObject[key]) === false) {\n        destinationObject[key] = [];\n      }\n      if(appendToArray){\n          destinationObject[key].push(fromValue);\n      } else{\n        destinationObject[key][arrayIndex] = fromValue;\n      }\n    } else if (Array.isArray(destinationObject)) {\n        destinationObject[arrayIndex] = fromValue;\n    } else {\n      destinationObject[key] = fromValue;\n    }\n  } else {\n    if (isValueArray) {\n      if (Array.isArray(destinationObject[key]) === false) {\n        destinationObject[key] = [];\n      }\n      if (Array.isArray(fromValue) && _isNextArrayProperty(keys) === false) {\n        for (valueIndex = 0; valueIndex < fromValue.length; valueIndex++) {\n          value = fromValue[valueIndex];\n          destinationObject[key][arrayIndex + valueIndex] = _setValue(destinationObject[key][arrayIndex + valueIndex], keys[0], keys.slice(1), value);\n        }\n      } else {\n        destinationObject[key][arrayIndex] = _setValue(destinationObject[key][arrayIndex], keys[0], keys.slice(1), fromValue);\n      }\n    } else if (Array.isArray(destinationObject)) {\n      if (Array.isArray(fromValue)) {\n        for (valueIndex = 0; valueIndex < fromValue.length; valueIndex++) {\n          value = fromValue[valueIndex];\n          destinationObject[arrayIndex + valueIndex] = _setValue(destinationObject[arrayIndex + valueIndex], keys[0], keys.slice(1), value);\n        }\n      } else {\n        destinationObject[arrayIndex] = _setValue(destinationObject[arrayIndex], keys[0], keys.slice(1), fromValue);\n      }\n    } else {\n      destinationObject[key] = _setValue(destinationObject[key], keys[0], keys.slice(1), fromValue);\n    }\n  }\n\n\n  return destinationObject;\n}\n\n/**\n * Check if next key is a array lookup\n * @param keys\n * @returns {boolean}\n * @private\n */\nfunction _isNextArrayProperty(keys) {\n  var regArray = /(\\[\\]|\\[(.*)\\])$/g\n    ;\n  return regArray.test(keys[0]);\n}\n\n/**\n * Check if passed object is empty, checking for object and array types\n * @param object\n * @returns {boolean}\n * @private\n */\nfunction _isEmpty(object) {\n  var empty = false;\n  if (typeof object === 'undefined' || object === null) {\n    empty = true;\n  } else if (_isEmptyObject(object)) {\n    empty = true;\n  } else if (_isEmptyArray(object)) {\n    empty = true;\n  }\n\n  return empty;\n}\n\n/**\n * Check if passed object is empty\n * @param object\n * @returns {boolean}\n * @private\n */\nfunction _isEmptyObject(object) {\n  return typeof object === 'object'\n    && Array.isArray(object) === false\n    && Object.keys(object).length === 0\n    ;\n}\n\n/**\n * Check if passed array is empty or with empty values only\n * @param object\n * @returns {boolean}\n * @private\n */\nfunction _isEmptyArray(object) {\n  return Array.isArray(object)\n    && (object.length === 0\n    || object.join('').length === 0)\n    ;\n}\n"}